# ---
# - name: Get all endpoints with specific filters
#   amazon.aws.ec2_vpc_endpoint_info:
#     region: "{{ region }}"
#     filters:
#       tag:api.openshift.com/name:
#         - "{{ cluster_name }}"
#   register: existing_endpoints

# - name: Debug existing_endpoints
#   debug:
#     var: existing_endpoints

# - name: set vpc-id
#   set_fact:
#     vpc_id: "{{ existing_endpoints.vpc_endpoints[0].vpc_id }}"
#     vpce_id: "{{ existing_endpoints.vpc_endpoints[0].vpc_endpoint_id }}"
#     vpc_endpoint_type: "{{ existing_endpoints.vpc_endpoints[0].vpc_endpoint_type }}"

# - name: Configure AWS VPC Endpoint to access 3M API
#   command:
#     argv:
#       - aws
#       - ec2
#       - modify-vpc-endpoint
#       - --vpc-endpoint-id
#       - "{{ vpce_id }}"
#       - --add-security-group-ids
#       - "{{ DEFAULT_3M_SG_ID }}"
- name: Get Security Group info by tag and cluster name
      amazon.aws.ec2_security_group_info:
        region: us-east-1
        filters:
          "tag:api.openshift.com/name": "{{ cluster_name }}"

      register: security_group_info
- name: debug existing sg info
  debug:
    var: security_group_info


- name: set group-id
  set_fact:
    group_id: "{{ security_group_info.security_groups[0].group_id }}"
    group_name: "{{ security_group_info.security_groups[0].group_name }}"

- name: Add inbound rule to default HCP security group
  ec2_group:
    name: "{{ group_name }}"
    description: updating default HCP ROSA SG inbound rules
    vpc_id: "{{ vpc_id }}"
    rules:
     - proto: all
       from_port: "-1"
       to_port: "-1"
       ip_prefix: "{{ prefix_ip_list }}" 
       group_id: "{{ group_id }}"    

